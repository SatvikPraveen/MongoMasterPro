# Location: `/config/mongodb-rs.conf`
# MongoDB Replica Set Configuration File
# Production-ready setup for high availability and fault tolerance

# =============================================================================
# STORAGE CONFIGURATION - REPLICA SET OPTIMIZED
# =============================================================================
storage:
  dbPath: /data/db
  journal:
    enabled: true
    commitIntervalMs: 50
  engine: wiredTiger
  wiredTiger:
    engineConfig:
      cacheSizeGB: 2
      journalCompressor: snappy
      directoryForIndexes: false
      maxCacheOverflowFileSizeGB: 0
    collectionConfig:
      blockCompressor: snappy
    indexConfig:
      prefixCompression: true
  syncPeriodSecs: 60
  oplogMinRetentionHours: 24

# =============================================================================
# SYSTEM LOG CONFIGURATION - REPLICA SET
# =============================================================================
systemLog:
  destination: file
  logAppend: true
  path: /var/log/mongodb/mongod.log
  logRotate: reopen
  component:
    accessControl:
      verbosity: 1
    command:
      verbosity: 1
    control:
      verbosity: 1
    ftdc:
      verbosity: 1
    geo:
      verbosity: 1
    index:
      verbosity: 1
    network:
      verbosity: 1
    query:
      verbosity: 1
    replication:
      verbosity: 2
    sharding:
      verbosity: 1
    storage:
      verbosity: 1
    write:
      verbosity: 1
    total:
      verbosity: 1

# =============================================================================
# NETWORK CONFIGURATION - REPLICA SET
# =============================================================================
net:
  port: 27017
  bindIp: 0.0.0.0
  maxIncomingConnections: 20000
  wireObjectCheck: true
  ipv6: false
  compression:
    compressors: snappy,zlib,zstd
  serviceExecutor: adaptive
  tls:
    mode: disabled
    # certificateKeyFile: /app/config/certs/mongodb.pem
    # CAFile: /app/config/certs/ca.pem
    # allowConnectionsWithoutCertificates: false
    # allowInvalidCertificates: false
    # allowInvalidHostnames: false

# =============================================================================
# PROCESS MANAGEMENT - REPLICA SET
# =============================================================================
processManagement:
  fork: false
  pidFilePath: /var/run/mongodb/mongod.pid
  timeZoneInfo: /usr/share/zoneinfo

# =============================================================================
# SECURITY CONFIGURATION - REPLICA SET
# =============================================================================
security:
  authorization: enabled
  javascriptEnabled: true
  keyFile: /app/config/replica.key
  clusterAuthMode: keyFile
  transitionToAuth: false
  # authSchemaVersion: 5
  sasl:
    hostName: ""
    serviceName: "mongodb"
    saslauthdSocketPath: ""

# =============================================================================
# OPERATION PROFILING - REPLICA SET
# =============================================================================
operationProfiling:
  slowOpThresholdMs: 100
  mode: slowOp
  slowOpSampleRate: 1.0
  filter: '{ "command.find": { "$exists": true } }'

# =============================================================================
# REPLICA SET CONFIGURATION - PRODUCTION READY
# =============================================================================
replication:
  replSetName: rs0
  secondaryIndexPrefetch: all
  enableMajorityReadConcern: true
  localPingThresholdMs: 15

# =============================================================================
# SHARDING CONFIGURATION (Ready for sharded clusters)
# =============================================================================
# sharding:
#   clusterRole: shardsvr
#   archiveMovedChunks: true

# =============================================================================
# SET PARAMETERS - REPLICA SET OPTIMIZED
# =============================================================================
setParameter:
  # Authentication & Authorization
  enableLocalhostAuthBypass: false
  authenticationMechanisms: SCRAM-SHA-1,SCRAM-SHA-256
  scramIterationCount: 15000

  # Connection Management
  connPoolMaxShardedConnsPerHost: 200
  connPoolMaxConnsPerHost: 200

  # Replica Set Specific
  replWriterThreadCount: 16
  replBatchLimitOperations: 5000
  replBatchLimitBytes: 104857600
  maxSyncSourceLagSecs: 30

  # Performance Tuning
  wiredTigerConcurrentReadTransactions: 128
  wiredTigerConcurrentWriteTransactions: 128
  wiredTigerEngineRuntimeConfig: "checkpoint=(wait=60,log_size=2GB)"

  # Diagnostics & Monitoring
  diagnosticDataCollectionEnabled: true
  diagnosticDataCollectionDirectorySizeMB: 200
  diagnosticDataCollectionPeriodMillis: 1000

  # Transaction Configuration
  transactionLifetimeLimitSeconds: 60
  maxTransactionLockRequestTimeoutMillis: 5000

  # Logging & Profiling
  logLevel: 1
  maxLogSizeKB: 10
  quiet: false

  # Index Building
  maxIndexBuildMemoryUsageMegabytes: 500

  # Query Execution
  internalQueryExecMaxBlockingSortBytes: 104857600
  internalQueryMaxBlockingSortMemoryUsageBytes: 104857600

  # Feature Compatibility
  featureCompatibilityVersion: "7.0"

  # Oplog Configuration
  replWriterMinThreadCount: 8
  logicalSessionRefreshMinutes: 5

  # Change Streams
  changeStreamPreAndPostImagesExpireAfterSeconds: 604800

  # Security
  opensslCipherConfig: "HIGH:!EXPORT:!aNULL@STRENGTH"

  # Memory Management
  tcmallocReleaseRate: 10.0

# =============================================================================
# CLOUD CONFIGURATION (For Atlas compatibility)
# =============================================================================
# cloud:
#   monitoring:
#     free:
#       state: "runtime"
#       tags: "rs0,production"

# =============================================================================
# AUDIT LOG CONFIGURATION (Enterprise feature)
# =============================================================================
# auditLog:
#   destination: file
#   format: JSON
#   path: /var/log/mongodb/audit.log
#   filter: |
#     {
#       $or: [
#         { "atype": "authenticate" },
#         { "atype": "authCheck", "param.command": { $in: ["find", "insert", "update", "delete"] } },
#         { "atype": "createUser" },
#         { "atype": "dropUser" },
#         { "atype": "createRole" },
#         { "atype": "dropRole" },
#         { "atype": "replSetReconfig" }
#       ]
#     }

# =============================================================================
# LDAP CONFIGURATION (Enterprise feature)
# =============================================================================
# security:
#   ldap:
#     servers: "ldap.example.com:389"
#     bind:
#       method: "simple"
#       saslMechanisms: "PLAIN"
#       queryUser: "cn=admin,dc=example,dc=com"
#       queryPassword: "admin_password"
#     transportSecurity: "none"
#     userToDNMapping: '[
#       {
#         match: "(.+)",
#         substitution: "cn={0},ou=users,dc=example,dc=com"
#       }
#     ]'
#     authz:
#       queryTemplate: "dc=example,dc=com??sub?(memberOf=cn={USER},ou=groups,dc=example,dc=com)"

# =============================================================================
# CONNECTION EXAMPLES
# =============================================================================
# Primary Connection:
# mongodb://app_user:app_secure_pass@mongo-rs-primary:27017/learning_platform?authSource=admin&replicaSet=rs0
#
# Full Replica Set Connection:
# mongodb://app_user:app_secure_pass@mongo-rs-primary:27017,mongo-rs-secondary1:27017,mongo-rs-secondary2:27017/learning_platform?authSource=admin&replicaSet=rs0&readPreference=secondary&w=majority&maxPoolSize=200
