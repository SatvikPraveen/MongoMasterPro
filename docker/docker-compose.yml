# Location: `/docker/docker-compose.yml`

version: "3.8"

services:
  mongo-primary:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: ${MONGO_CONTAINER_NAME:-mongo-primary}
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-mongomaster123}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE:-learning_platform}
    ports:
      - "${MONGO_PORT:-27017}:27017"
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
      - mongo-log:/var/log/mongodb
      - ../scripts:/app/scripts:ro
      - ../data:/app/data:ro
      - ../tests:/app/tests:ro
      - ../config:/app/config:ro
      - ../docs/results:/app/docs/results
    networks:
      - mongo-network
    command: >
      bash -c "
        mongod --bind_ip_all --replSet rs0 --port 27017 --dbpath /data/db --logpath /var/log/mongodb/mongod.log --logappend &
        sleep 10 &&
        mongosh --eval 'rs.initiate({_id: \"rs0\", members: [{_id: 0, host: \"mongo-primary:27017\"}]})' &&
        wait
      "
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--quiet"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  mongo-express:
    image: mongo-express:1.0.0-alpha
    container_name: mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME:-admin}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-mongomaster123}
      ME_CONFIG_MONGODB_SERVER: mongo-primary
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: express123
    ports:
      - "8081:8081"
    networks:
      - mongo-network
    depends_on:
      mongo-primary:
        condition: service_healthy

volumes:
  mongo-data:
    name: ${MONGO_DATA_VOLUME:-mongo-data}
  mongo-config:
    name: ${MONGO_CONFIG_VOLUME:-mongo-config}
  mongo-log:
    name: ${MONGO_LOG_VOLUME:-mongo-log}

networks:
  mongo-network:
    name: ${DOCKER_NETWORK:-mongo-network}
    driver: bridge
